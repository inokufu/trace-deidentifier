[project]
name = "trace-deidentifier"
version = "0.1.0"
description = "xAPI trace deidentication"
authors = [
    { name = "Pierre", email = "pierre.martel@inokufu.com" }
]
dependencies = [
    "fastapi~=0.115.14",
    "uvicorn[standard]~=0.35.0",
    "ralph-malph~=5.0.1",
    "httpx~=0.28.1",
    "gunicorn~=23.0.0",
    "logger @ git+https://github.com/inokufu/python-logger@v0.1.0",
    "configcore @ git+https://github.com/inokufu/python-config@v0.1.0",
]
readme = "README.md"
requires-python = ">= 3.13"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.25.0",
]

[tool.rye.scripts]
start = "uvicorn trace_deidentifier.api.main:app --host 0.0.0.0 --port 8001 --reload"


[tool.ruff]
output-format = "concise"
target-version = "py313"
line-length = 88
indent-width = 4

lint.select = ["ALL"]
lint.ignore = [
  "PLE1205",  # logging-too-many-args
  "FBT",  # flake8-boolean-trap
  "E501",  # line-too-long
  "D100",  # pydocstyle,
  "ANN401",  # flake8-annotations
  "EM",  # flake8-errmsg
  "INP001",  # implicit-namespace-package
  "TRY003",  # raise-vanilla-args
  "TRY401",  # verbose-log-message
]
lint.extend-unfixable = [
  "TCH002",
  "TRY400",
  "SIM105",
]

lint.pydocstyle.convention = "pep257"
lint.flake8-bandit.check-typed-exception = true
lint.flake8-type-checking.strict = true

# Avoid error B008 for fastapi params
lint.flake8-bugbear.extend-immutable-calls = ["fastapi.Depends", "fastapi.params.Depends", "fastapi.Query", "fastapi.params.Query"]

[tool.ruff.lint.extend-per-file-ignores]
# Avoid error S101 for assertions
"tests/*.py" = ["S101"]

[tool.pytest.ini_options]
pythonpath = [".", "src"]
addopts = "--cov=src"

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod"
]
